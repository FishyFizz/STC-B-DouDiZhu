C51 COMPILER V9.05   MAIN                                                                  06/28/2022 11:57:13 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Src\main.c LARGE OMF2 OPTIMIZE(0,SPEED) BROWSE NOAREGS DEFINE(STC) DEBUG PR
                    -INT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "global.h"
   2          #include "scheduler/scheduler.h"
   3          #include "display/seg_led.h"
   4          #include "conc/semaphore.h"
   5          #include "bit_ops/bit_ops.h"
   6          #include "events/events.h"
   7          #include "rs485/rs485.h"
   8          #include "error/error.h"
   9          #include "random/random.h"
  10          #include "mem/mem.h"
  11          #include "ds1302/ds1302.h"
  12          #include "buzzer/buzzer.h"
  13          
  14          void startup()
  15          {
  16   1          seg_led_init();
  17   1          rs485_init(115200);
  18   1          LED_SEG_SWITCH = 1;
  19   1      
  20   1          LEDs = 0xFF;
  21   1          delay_ms(500);
  22   1          LEDs = 0x00;
  23   1          delay_ms(100);
  24   1          led_display_content = 0;
  25   1          seg_set_number(0);
  26   1              
  27   1              buzzer_init();
  28   1              buzzer_setfreq(660);
  29   1              buzzer_on();
  30   1              delay_ms(10);
  31   1              buzzer_off();
  32   1      }
  33          
  34          /* RS485 TEST
  35          void proc1()
  36          {
  37              XDATA u8 buf[4];
  38              XDATA u32 XDATA* ptr = (u32 XDATA*)buf;
  39          
  40              while(1)
  41              {
  42                  wait_on_evts(EVT_BTN1_DN | EVT_UART2_RECV);
  43                  {
  44                      if(MY_EVENTS & EVT_BTN1_DN)
  45                      {
  46                          *ptr = rand32();
  47                          seg_set_number(*ptr);
  48                          rs485_write(buf, 4);
  49                      }
  50                      else if(MY_EVENTS & EVT_UART2_RECV)
  51                      {
  52                          my_memcpy(buf, rs485_buf, 4);
  53                          seg_set_number(*ptr);
  54                      }
C51 COMPILER V9.05   MAIN                                                                  06/28/2022 11:57:13 PAGE 2   

  55                  }
  56              }
  57          }
  58          */
  59          
  60          /* RTC TEST
  61          void proc1()
  62          {
  63              ds1302_init();
  64          
  65              ds1302_writebyte(DS1302_WP,0x00);
  66              ds1302_writebyte(DS1302_SEC,0x00);
  67              sleep(100);
  68              while(1)
  69              {
  70                  XDATA u8 sec = 0;
  71                  NOINT_ATOMIC(
  72                      ds1302_readbyte(sec, DS1302_SEC);
  73                      seg_set_number((sec&0x0f) + 10*((sec&0x70)>>4));
  74                  );
  75                  sleep(100);
  76              }
  77          }
  78          */
  79          
  80          void proc1()
  81          {
  82   1              while(1)
  83   1              {
  84   2                      seg_set_number(system_cycles);
  85   2                      yield();
  86   2              }
  87   1      }
  88          
  89          XDATA u8 current = 0;
  90          void main() //also proc0
  91          {
  92   1          startup();
  93   1      
  94   1          start_scheduler(1);
  95   1          start_process(proc1);
  96   1      
  97   1          //DISPLAY DRIVER
  98   1          while(1)
  99   1              {   
 100   2                      seg_led_scan_next();
 101   2                      //process_events();
 102   2              //LEDs = system_cycles>>3;
 103   2                      led_display_content = system_cycles >> 3;
 104   2                      yield();
 105   2          }
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    165    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.05   MAIN                                                                  06/28/2022 11:57:13 PAGE 3   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
