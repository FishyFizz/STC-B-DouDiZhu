C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2022 07:49:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE Src\main.c LARGE OMF2 OPTIMIZE(0,SPEED) BROWSE DEFINE(STC) DE
                    -BUG PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "global.h"
   2          #include "scheduler/scheduler.h"
   3          #include "display/seg_led.h"
   4          #include "conc/semaphore.h"
   5          #include "bit_ops/bit_ops.h"
   6          #include "events/events.h"
   7          #include "rs485/rs485.h"
   8          #include "error/error.h"
   9          #include "random/random.h"
  10          #include "mem/mem.h"
  11          #include "ds1302/ds1302.h"
  12          
  13          void startup()
  14          {
  15   1          seg_led_init();
  16   1          rs485_init(115200);
  17   1          LED_SEG_SWITCH = 1;
  18   1      
  19   1          LEDs = 0xFF;
  20   1          delay_ms(500);
  21   1          LEDs = 0x00;
  22   1          delay_ms(100);
  23   1          led_display_content = 0;
  24   1          seg_set_number(0);
  25   1      }
  26          
  27          /*
  28          void proc1()
  29          {
  30              XDATA u8 buf[4];
  31              XDATA u32 XDATA* ptr = (u32 XDATA*)buf;
  32          
  33              while(1)
  34              {
  35                  wait_on_evts(EVT_BTN1_DN | EVT_UART2_RECV);
  36                  {
  37                      if(MY_EVENTS & EVT_BTN1_DN)
  38                      {
  39                          *ptr = rand32();
  40                          seg_set_number(*ptr);
  41                          rs485_write(buf, 4);
  42                      }
  43                      else if(MY_EVENTS & EVT_UART2_RECV)
  44                      {
  45                          my_memcpy(buf, rs485_buf, 4);
  46                          seg_set_number(*ptr);
  47                      }
  48                  }
  49              }
  50          }
  51          */
  52          
  53          void proc1()
  54          {
C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2022 07:49:22 PAGE 2   

  55   1          ds1302_init();
  56   1      
  57   1          ds1302_writebyte(DS1302_WP,0x00);
  58   1          ds1302_writebyte(DS1302_SEC,0x00);
  59   1          sleep(100);
  60   1          while(1)
  61   1          {
  62   2              XDATA u8 sec = 0;
  63   2              NOINT_ATOMIC(
  66   2                  ds1302_readbyte(sec, DS1302_SEC);
  66   2                  seg_set_number((sec&0x0f) + 10*((sec&0x70)>>4));
  66   2              );
  67   2              sleep(100);
  68   2          }
  69   1      }
  70          
  71          XDATA u8 current = 0;
  72          void main() //also proc0
  73          {
  74   1          startup();
  75   1      
  76   1          start_scheduler(1);
  77   1          //start_process(proc1);
  78   1      
  79   1          //DISPLAY DRIVER
  80   1          while(1)
  81   1          {   
  82   2              ATOMIC(
  85   2                  seg_led_scan_next();
  85   2                  process_events();
  85   2              )
  86   2              led_display_content = system_cycles >> 4;
  87   2              yield(); 
  88   2          }
  89   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    303    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
